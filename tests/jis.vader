Given (Some Java and Non-Java imports):
  package com.bar.baz.home;
  
  import java.io.BufferedReader;
  import com.bar.bang.baz;
  import java.util.ArrayList;

  class Foo {

  }


Execute (Sort them with newline at depth 0):
  let g:JavaImpTopImports = ['java\..*', 'javax\..*', 'org\..*', 'com\..*']
  let g:JavaImpSortPkgSep = 0
  let g:JavaImpSortRemoveUnused = 0
  JIS

Expect (Sorted list of Java and Non-Java Imports):
  package com.bar.baz.home;
  
  import java.io.BufferedReader;
  import java.util.ArrayList;
  import com.bar.bang.baz;

  class Foo {

  }

Given (Some Java and Non-Java imports):
  package com.bar.baz.home;
  
  import java.io.BufferedReader;
  import com.bar.bang.baz;
  import java.util.ArrayList;

  class Foo {

  }

Execute (Sort them with newline at depth 1):
  let g:JavaImpSortPkgSep = 1
  let g:JavaImpSortRemoveUnused = 0
  JIS

Expect (Sorted list of Java and Non-Java Imports):
  package com.bar.baz.home;
  
  import java.io.BufferedReader;
  import java.util.ArrayList;

  import com.bar.bang.baz;

  class Foo {

  }

Given (Some Java and Non-Java imports):
  package com.bar.baz.home;
  
  import java.io.BufferedReader;
  import com.bar.bang.baz;
  import java.util.ArrayList;

  class Foo {

  }

Execute (Sort them with newline at depth 2):
  let g:JavaImpSortPkgSep = 2
  let g:JavaImpSortRemoveUnused = 0
  JIS

Expect (Sorted list of Java and Non-Java Imports):
  package com.bar.baz.home;
  
  import java.io.BufferedReader;

  import java.util.ArrayList;

  import com.bar.bang.baz;

  class Foo {

  }

Given (Only 1 Java Import):
  package com.bar.baz.home;
  
  import java.io.BufferedReader;

  class Foo {

  }

Execute (Sort them with newline at depth 1):
  let g:JavaImpSortPkgSep = 1
  let g:JavaImpSortRemoveUnused = 0
  JIS

Expect (Sorted list of Java and Non-Java Imports):
  package com.bar.baz.home;
  
  import java.io.BufferedReader;

  class Foo {

  }

Given (More than 1 Java Import, but only Java Imports.):
  package com.bar.baz.home;
  
  import java.util.ArrayList;
  import java.io.BufferedReader;

  class Foo {

  }

Execute (Sort them with newline at depth 1):
  let g:JavaImpSortPkgSep = 1
  let g:JavaImpSortRemoveUnused = 0
  JIS

Expect (Sorted list of Java and Non-Java Imports):
  package com.bar.baz.home;
  
  import java.io.BufferedReader;
  import java.util.ArrayList;

  class Foo {

  }

Given (No Java Imports):
  package com.bar.baz.home;
  
  import com.bar.bangb.baz;
  import com.bar.banga.baz;
  import com.bar.bangc.baz;

  class Foo {

  }

Execute (Sort them with newline at depth 1):
  let g:JavaImpSortPkgSep = 1
  JIS

Expect (Sorted list of Non-Java Imports):
  package com.bar.baz.home;
  
  import com.bar.banga.baz;
  import com.bar.bangb.baz;
  import com.bar.bangc.baz;

  class Foo {

  }

Given (No package statement.):
  import com.bar.bangb.baz;
  import com.bar.banga.baz;
  import com.bar.bangc.baz;

  class Foo {

  }

Execute (Sort them with newline at depth 1):
  let g:JavaImpSortPkgSep = 1
  let g:JavaImpSortRemoveUnused = 0
  JIS

Expect (Sorted list of Non-Java Imports, and still no package statement.):
  import com.bar.banga.baz;
  import com.bar.bangb.baz;
  import com.bar.bangc.baz;

  class Foo {

  }

Given (Empty Top Imports List):
  import java.bar;
  import javax.bar;
  import org.bar;
  import com.bar;

  class Foo {

  }

Execute (Sort them with newline at depth 0 and with no Top Packages):
  let g:JavaImpSortPkgSep = 0
  let g:JavaImpTopImports = []
  let g:JavaImpSortRemoveUnused = 0
  JIS

Expect (Alphabetically Sorted list of Imports, and still no package statement.):
  import com.bar;
  import java.bar;
  import javax.bar;
  import org.bar;

  class Foo {

  }

Given (Custom Top Imports List):
  import java.bar;
  import javax.bar;
  import org.bar;
  import com.bar;

  class Foo {

  }

Execute (Sort the imports with the custom list.):
  let g:JavaImpTopImports = ['org\..*', 'java\..*', 'javax\..*', 'com\..*']
  let g:JavaImpSortPkgSep = 0
  JIS

Expect (Alphabetically Sorted list of Imports, and still no package statement.):
  import org.bar;
  import java.bar;
  import javax.bar;
  import com.bar;

  class Foo {

  }

Given (Static Imports At Top):
  import static a;
  import static b;
  import static c;
  import java.bar;

  class Foo {

  }

Execute (Sort Static Imports to the Top.):
  let g:JavaImpSortPkgSep = 0
  let g:JavaImpStaticImportsFirst = 1
  let g:JavaImpSortRemoveUnused = 0
  JIS

Expect (Static Imports Still At Top.):
  import static a;
  import static b;
  import static c;
  import java.bar;

  class Foo {

  }

Given (Static Imports At Top):
  import static a;
  import static b;
  import static c;
  import java.bar;

  class Foo {

  }

Execute (Sort Static Imports to the Bottom.):
  let g:JavaImpSortPkgSep = 0
  let g:JavaImpStaticImportsFirst = 0
  let g:JavaImpSortRemoveUnused = 0
  JIS

Expect (Static Imports At Bottom.):
  import java.bar;
  import static a;
  import static b;
  import static c;

  class Foo {

  }

Given (Only Static Imports.):
  import static a;
  import static b;
  import static c;

  class Foo {

  }

Execute (Sort Static Imports to the Bottom.):
  let g:JavaImpSortPkgSep = 0
  let g:JavaImpStaticImportsFirst = 0
  JIS

Expect (Static Imports At Bottom and still above class content.):
  import static a;
  import static b;
  import static c;

  class Foo {

  }

Given (Normal and Static Imports.):
  import java.foo.bar;
  import static a;
  import android.foo.bar;
  import static b;
  import com.foo.bar;
  import static c;

  class Foo {

  }

Execute (Sort Static Imports to the Top with a Package Separator for Normal Imports.):
  let g:JavaImpSortPkgSep = 1
  let g:JavaImpStaticImportsFirst = 1
  let g:JavaImpSortRemoveUnused = 0
  JIS

Expect (Static Imports At Bottom and still above class content.):
  import static a;
  import static b;
  import static c;

  import java.foo.bar;

  import com.foo.bar;

  import android.foo.bar;

  class Foo {

  }

Given (Normal and Static Imports.):
  import java.foo.bar;
  import static a;
  import android.foo.bar;
  import static b;
  import com.foo.bar;
  import static c;

  class Foo {

  }

Execute (Sort Static Imports to the Bottom with a Package Separator for Normal Imports.):
  let g:JavaImpSortPkgSep = 1
  let g:JavaImpStaticImportsFirst = 0
  let g:JavaImpSortRemoveUnused = 0
  JIS

Expect (Static Imports At Bottom and still above class content.):
  import java.foo.bar;

  import com.foo.bar;

  import android.foo.bar;

  import static a;
  import static b;
  import static c;

  class Foo {

  }

Given (Some Java, Non-Java, static, Non-static, Used, Unused imports):
  package com.bar.baz.home;
  
  import java.io.BufferedReader;
  import java.util.ArrayList;
  import java.util.Map;

  import com.bar.bang.baz;
  import com.bar.bang.bax;

  import static a;
  import static java.util.Arrays.sort;

  class Foo {
    private BufferedReader reader;
    private ArrayList list;
    private baz field;
    private int[] array = sort(new int[]);
  }


Execute (Sort them and remove the Unused imports):
  let g:JavaImpSortRemoveUnused = 1
  JIS

Expect (Sorted list without the Unused imports):
  package com.bar.baz.home;
  
  import java.io.BufferedReader;
  import java.util.ArrayList;

  import com.bar.bang.baz;

  import static java.util.Arrays.sort;

  class Foo {
    private BufferedReader reader;
    private ArrayList list;
    private baz field;
    private int[] array = sort(new int[]);
  }
